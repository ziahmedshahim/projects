$date
	Tue Jun 17 11:18:40 2025
$end

$version
	Synopsys VCS version W-2024.09-SP2_Full64
$end

$timescale
	1s
$end

$comment Csum: 1 125380a8e12ed7a3 $end


$scope module barrel_shifter_8bit_tb $end
$var reg 8 ! in [7:0] $end
$var reg 3 " ctrl [2:0] $end
$var wire 8 # out [7:0] $end
$var integer 32 $ i $end
$var reg 8 % expected [7:0] $end
$var integer 32 & errors $end

$scope function expected_shift $end
$var reg 8 ' expected_shift [7:0] $end
$var reg 8 ( val [7:0] $end
$var reg 3 ) amt [2:0] $end
$upscope $end


$scope module uut $end
$var wire 8 * in [7:0] $end
$var wire 3 + ctrl [2:0] $end
$var wire 8 # out [7:0] $end
$var wire 8 , x [7:0] $end
$var wire 8 - y [7:0] $end

$scope module ins_17 $end
$var wire 1 . in0 $end
$var wire 1 / in1 $end
$var wire 1 0 sel $end
$var wire 1 1 out $end
$upscope $end


$scope module ins_16 $end
$var wire 1 2 in0 $end
$var wire 1 3 in1 $end
$var wire 1 0 sel $end
$var wire 1 4 out $end
$upscope $end


$scope module ins_15 $end
$var wire 1 5 in0 $end
$var wire 1 6 in1 $end
$var wire 1 0 sel $end
$var wire 1 7 out $end
$upscope $end


$scope module ins_14 $end
$var wire 1 8 in0 $end
$var wire 1 9 in1 $end
$var wire 1 0 sel $end
$var wire 1 : out $end
$upscope $end


$scope module ins_13 $end
$var wire 1 ; in0 $end
$var wire 1 . in1 $end
$var wire 1 0 sel $end
$var wire 1 < out $end
$upscope $end


$scope module ins_12 $end
$var wire 1 = in0 $end
$var wire 1 2 in1 $end
$var wire 1 0 sel $end
$var wire 1 > out $end
$upscope $end


$scope module ins_11 $end
$var wire 1 ? in0 $end
$var wire 1 5 in1 $end
$var wire 1 0 sel $end
$var wire 1 @ out $end
$upscope $end


$scope module ins_10 $end
$var wire 1 A in0 $end
$var wire 1 8 in1 $end
$var wire 1 0 sel $end
$var wire 1 B out $end
$upscope $end


$scope module ins_27 $end
$var wire 1 1 in0 $end
$var wire 1 C in1 $end
$var wire 1 D sel $end
$var wire 1 E out $end
$upscope $end


$scope module ins_26 $end
$var wire 1 4 in0 $end
$var wire 1 F in1 $end
$var wire 1 D sel $end
$var wire 1 G out $end
$upscope $end


$scope module ins_25 $end
$var wire 1 7 in0 $end
$var wire 1 1 in1 $end
$var wire 1 D sel $end
$var wire 1 H out $end
$upscope $end


$scope module ins_24 $end
$var wire 1 : in0 $end
$var wire 1 4 in1 $end
$var wire 1 D sel $end
$var wire 1 I out $end
$upscope $end


$scope module ins_23 $end
$var wire 1 < in0 $end
$var wire 1 7 in1 $end
$var wire 1 D sel $end
$var wire 1 J out $end
$upscope $end


$scope module ins_22 $end
$var wire 1 > in0 $end
$var wire 1 : in1 $end
$var wire 1 D sel $end
$var wire 1 K out $end
$upscope $end


$scope module ins_21 $end
$var wire 1 @ in0 $end
$var wire 1 < in1 $end
$var wire 1 D sel $end
$var wire 1 L out $end
$upscope $end


$scope module ins_20 $end
$var wire 1 B in0 $end
$var wire 1 > in1 $end
$var wire 1 D sel $end
$var wire 1 M out $end
$upscope $end


$scope module ins_07 $end
$var wire 1 E in0 $end
$var wire 1 N in1 $end
$var wire 1 O sel $end
$var wire 1 P out $end
$upscope $end


$scope module ins_06 $end
$var wire 1 G in0 $end
$var wire 1 E in1 $end
$var wire 1 O sel $end
$var wire 1 Q out $end
$upscope $end


$scope module ins_05 $end
$var wire 1 H in0 $end
$var wire 1 G in1 $end
$var wire 1 O sel $end
$var wire 1 R out $end
$upscope $end


$scope module ins_04 $end
$var wire 1 I in0 $end
$var wire 1 H in1 $end
$var wire 1 O sel $end
$var wire 1 S out $end
$upscope $end


$scope module ins_03 $end
$var wire 1 J in0 $end
$var wire 1 I in1 $end
$var wire 1 O sel $end
$var wire 1 T out $end
$upscope $end


$scope module ins_02 $end
$var wire 1 K in0 $end
$var wire 1 J in1 $end
$var wire 1 O sel $end
$var wire 1 U out $end
$upscope $end


$scope module ins_01 $end
$var wire 1 L in0 $end
$var wire 1 K in1 $end
$var wire 1 O sel $end
$var wire 1 V out $end
$upscope $end


$scope module ins_00 $end
$var wire 1 M in0 $end
$var wire 1 L in1 $end
$var wire 1 O sel $end
$var wire 1 W out $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
0N
0F
0C
xP
x0
xK
xQ
xD
xL
xR
xO
xM
xS
x1
xT
x4
xU
x7
xV
x:
xW
x<
x.
x>
x2
x@
x5
xB
x8
xE
x/
x;
xG
x3
x=
xH
x6
x?
xI
x9
xA
xJ
b000 "
b00000000000000000000000000000000 &
b10000000 %
b000 )
b10000000 '
b10000000 (
b00000000000000000000000000000000 $
b10000000 !
b10000000 #
b000 +
b10000000 *
b10000000 ,
b10000000 -
$end
1P
0Q
0R
0S
0T
0U
0V
0W
1.
02
05
08
0;
0=
0?
0A
00
0D
0O
11
04
07
0:
0<
0>
0@
0B
1E
0G
0H
0I
0J
0K
0L
0M
0/
03
06
09
#10
b00000000000000000000000000000001 $
b001 "
b001 +
1O
b001 )
b00000000 '
b00000000 %
b11000000 #
1Q
b01000000 #
0P
#15
b00000000000000000000000000000001 &
#20
b00000000000000000000000000000010 $
b010 "
b010 +
1D
0O
b010 )
b00000000 #
0Q
b10000000 #
1P
b00100000 -
0E
1H
b10100000 #
1R
b00100000 #
0P
#25
b00000000000000000000000000000010 &
#30
b00000000000000000000000000000011 $
b011 "
b011 +
1O
b011 )
b00010000 #
0R
1S
#35
b00000000000000000000000000000011 &
#40
b00000000000000000000000000000100 $
b100 "
b100 +
10
0D
0O
b100 )
b10001000 ,
1<
b00001000 ,
01
b00100000 #
1R
0S
b00001000 -
0H
1J
b00001000 #
0R
1T
#45
b00000000000000000000000000000100 &
#50
b00000000000000000000000000000101 $
b101 "
b101 +
1O
b101 )
b00000100 #
0T
1U
#55
b00000000000000000000000000000101 &
#60
b00000000000000000000000000000110 $
b110 "
b110 +
1D
0O
b110 )
b00001000 #
1T
0U
b00000010 -
0J
1L
b00000010 #
0T
1V
#65
b00000000000000000000000000000110 &
#70
b00000000000000000000000000000111 $
b111 "
b111 +
1O
b111 )
b00000001 #
0V
1W
#75
b00000000000000000000000000000111 &
#80
b00000000000000000000000000001000 $
